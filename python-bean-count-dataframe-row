<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.3/css/all.min.css" integrity="sha256-2H3fkXt6FEmrReK448mDVGKb3WW2ZZw35gI7vqHOE4Y=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"dormouse.github.io","root":"/","images":"/images","scheme":"Muse","version":"8.7.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":false,"bookmark":{"enable":false,"color":"#222","save":"auto"},"fancybox":false,"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>
<meta name="description" content="用 Python 编程，使用不同的方法来完成同一个目标，有时候是一件很有意思的事情。这让我想起鲁迅笔下的孔乙己。孔乙己对于茴香豆的茴字的四种写法颇有研究。我不敢自比孔乙己，这里搜集一些 Python 的茴香豆，以飨各位码农。 一共有多少条数据？这大概是数据分析工作最基本的内容吧。这里，我们来聊一聊如何获取 Pandas 中 DataFrame 的行数。首先准备一个用于测试的 DataFrame 。">
<meta property="og:type" content="article">
<meta property="og:title" content="【Python茴香豆系列】之 PANDAS 获取 DataFrame 的行数">
<meta property="og:url" content="https://dormouse.github.io/python-bean-count-dataframe-row">
<meta property="og:site_name" content="Dormouse Hole">
<meta property="og:description" content="用 Python 编程，使用不同的方法来完成同一个目标，有时候是一件很有意思的事情。这让我想起鲁迅笔下的孔乙己。孔乙己对于茴香豆的茴字的四种写法颇有研究。我不敢自比孔乙己，这里搜集一些 Python 的茴香豆，以飨各位码农。 一共有多少条数据？这大概是数据分析工作最基本的内容吧。这里，我们来聊一聊如何获取 Pandas 中 DataFrame 的行数。首先准备一个用于测试的 DataFrame 。">
<meta property="og:locale" content="en_US">
<meta property="article:published_time" content="2021-02-02T16:00:00.000Z">
<meta property="article:modified_time" content="2021-02-28T13:46:46.755Z">
<meta property="article:author" content="Dormouse Young">
<meta property="article:tag" content="python">
<meta property="article:tag" content="pandas">
<meta property="article:tag" content="dataframe">
<meta property="article:tag" content="row">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://dormouse.github.io/python-bean-count-dataframe-row">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://dormouse.github.io/python-bean-count-dataframe-row","path":"/python-bean-count-dataframe-row","title":"【Python茴香豆系列】之 PANDAS 获取 DataFrame 的行数"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>【Python茴香豆系列】之 PANDAS 获取 DataFrame 的行数 | Dormouse Hole</title>
  




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <h1 class="site-title">Dormouse Hole</h1>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">The new hole since 2018</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
    </div>
  </div>
</div>







</div>
        
  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>

  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%E8%8C%B4%E9%A6%99%E8%B1%86%E4%B8%80%EF%BC%9A-count"><span class="nav-number">1.</span> <span class="nav-text">茴香豆一： count</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E8%8C%B4%E9%A6%99%E8%B1%86%E4%BA%8C%EF%BC%9A-shape"><span class="nav-number">2.</span> <span class="nav-text">茴香豆二： shape</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E8%8C%B4%E9%A6%99%E8%B1%86%E4%B8%89%EF%BC%9A-len"><span class="nav-number">3.</span> <span class="nav-text">茴香豆三： len</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E8%8C%B4%E9%A6%99%E8%B1%86%E5%9B%9B%EF%BC%9A-index"><span class="nav-number">4.</span> <span class="nav-text">茴香豆四： index</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E8%8C%B4%E9%A6%99%E8%B1%86%E4%BA%94%EF%BC%9A-%E5%86%8D%E6%9D%A5%E4%B8%89%E4%B8%AA"><span class="nav-number">5.</span> <span class="nav-text">茴香豆五： 再来三个</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-overview">
            <div class="site-author site-overview-item animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">Dormouse Young</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap site-overview-item animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">22</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">4</span>
        <span class="site-state-item-name">categories</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">24</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>



          </div>
        </div>
      </div>
    </div>
  </aside>
  <div class="sidebar-dimmer"></div>


    </header>

    
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://dormouse.github.io/python-bean-count-dataframe-row">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="Dormouse Young">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Dormouse Hole">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          【Python茴香豆系列】之 PANDAS 获取 DataFrame 的行数
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2021-02-03 00:00:00" itemprop="dateCreated datePublished" datetime="2021-02-03T00:00:00+08:00">2021-02-03</time>
    </span>
      <span class="post-meta-item">
        <span class="post-meta-item-icon">
          <i class="far fa-calendar-check"></i>
        </span>
        <span class="post-meta-item-text">Edited on</span>
        <time title="Modified: 2021-02-28 21:46:46" itemprop="dateModified" datetime="2021-02-28T21:46:46+08:00">2021-02-28</time>
      </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">In</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/Python-%E8%8C%B4%E9%A6%99%E8%B1%86/" itemprop="url" rel="index"><span itemprop="name">Python 茴香豆</span></a>
        </span>
    </span>

  
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">
        <p>用 Python 编程，使用不同的方法来完成同一个目标，有时候是一件很有意思的事情。这让我想起鲁迅笔下的孔乙己。孔乙己对于茴香豆的茴字的四种写法颇有研究。我不敢自比孔乙己，这里搜集一些 Python 的茴香豆，以飨各位码农。</p>
<p>一共有多少条数据？这大概是数据分析工作最基本的内容吧。<br>这里，我们来聊一聊如何获取 Pandas 中 DataFrame 的行数。<br>首先准备一个用于测试的 DataFrame 。这个 DataFrame 有 3 列，名称分别为 a 、 b 和 c ：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df = pd.DataFrame(&#123;<span class="string">&#x27;a&#x27;</span>:[<span class="literal">None</span>,<span class="number">2</span>,<span class="number">3</span>], <span class="string">&#x27;b&#x27;</span>:[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], <span class="string">&#x27;c&#x27;</span>:[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df</span><br><span class="line">     a  b  c</span><br><span class="line"><span class="number">0</span>  NaN  <span class="number">4</span>  <span class="number">7</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2.0</span>  <span class="number">5</span>  <span class="number">8</span></span><br><span class="line"><span class="number">2</span>  <span class="number">3.0</span>  <span class="number">6</span>  <span class="number">9</span></span><br></pre></td></tr></table></figure>

<h1 id="茴香豆一：-count"><a href="#茴香豆一：-count" class="headerlink" title="茴香豆一： count"></a>茴香豆一： count</h1><p>SQL 语句有一个 <code>SELECT count (*) FROM some_table</code> ，<br>DataFrame 同样有一个 <code>count</code> 函数可以用来计数，示例如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">&#x27;a&#x27;</span>].count()</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>等等，怎么会是 2 ？结果应该是三才对啊！原来， <code>count</code> 会把 <code>NaN</code> 剔除， a 列中有 <code>NaN</code> ，所以结果不对，我们看看 b 列就对了：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">&#x27;b&#x27;</span>].count()</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>可是，我们不能保证每一次碰到的 b 列都没有空值啊，于是我们自己造一列出来：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">&#x27;aa&#x27;</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df</span><br><span class="line">     a  b  c  aa</span><br><span class="line"><span class="number">0</span>  NaN  <span class="number">4</span>  <span class="number">7</span>   <span class="number">1</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2.0</span>  <span class="number">5</span>  <span class="number">8</span>   <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  <span class="number">3.0</span>  <span class="number">6</span>  <span class="number">9</span>   <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">&#x27;aa&#x27;</span>].count()</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>好吧，至此，任务勉强完成了，但是……有一点丑陋。</p>
<span id="more"></span>


<h1 id="茴香豆二：-shape"><a href="#茴香豆二：-shape" class="headerlink" title="茴香豆二： shape"></a>茴香豆二： shape</h1><p>经过艰苦卓绝的学习，我发现 DataFrame 有一个 shape 函数。这是一个奇妙的函数，示例如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.shape</span><br><span class="line">(<span class="number">3</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>于是，这样就可以得到结果了：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.shape[<span class="number">0</span>]</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>厉害吧，神奇吧。<br>但是 shape 得到的是两个数字，我们只要一个数字，在这里，是不是有点浪费呢？</p>
<h1 id="茴香豆三：-len"><a href="#茴香豆三：-len" class="headerlink" title="茴香豆三： len"></a>茴香豆三： len</h1><p>Python 有一个内置的 len ，一般来说，内置的东西总是高级一点。我们来试试：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(df)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>那么这个 len 背后又是什么呢？在 IPython 中检查一下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: df.__len__??</span><br><span class="line">Signature: df.__len__() -&gt; <span class="built_in">int</span></span><br><span class="line">Source:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Returns length of info axis, but here we use the index.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.index)</span><br></pre></td></tr></table></figure>

<p>上面的 shape 又是什么呢？</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">2</span>]: df.shape??</span><br><span class="line"><span class="type">Type</span>:        <span class="built_in">property</span></span><br><span class="line">Source:</span><br><span class="line"><span class="comment"># df.shape.fget</span></span><br><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shape</span>(<span class="params">self</span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">int</span>, <span class="built_in">int</span>]:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Return a tuple representing the dimensionality of the DataFrame.</span></span><br><span class="line"><span class="string">    ......</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(self.index), <span class="built_in">len</span>(self.columns)</span><br></pre></td></tr></table></figure>

<h1 id="茴香豆四：-index"><a href="#茴香豆四：-index" class="headerlink" title="茴香豆四： index"></a>茴香豆四： index</h1><p>从以上两个源代码可以看出，我们应当这样使用 len ：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(df.index)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<h1 id="茴香豆五：-再来三个"><a href="#茴香豆五：-再来三个" class="headerlink" title="茴香豆五： 再来三个"></a>茴香豆五： 再来三个</h1><p>山外青山楼外楼， Python 永远还有茴香豆。再来三个：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df.index.size</span><br><span class="line"><span class="built_in">len</span>(df.axes[<span class="number">0</span>])</span><br><span class="line">df.pipe(<span class="built_in">len</span>)</span><br></pre></td></tr></table></figure>

    </div>

    
    
    

    <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/python/" rel="tag"># python</a>
              <a href="/tags/pandas/" rel="tag"># pandas</a>
              <a href="/tags/dataframe/" rel="tag"># dataframe</a>
              <a href="/tags/row/" rel="tag"># row</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/pandas-tips" rel="prev" title="Pandas Notes">
                  <i class="fa fa-chevron-left"></i> Pandas Notes
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/python-bean-iter-dataframe-row" rel="next" title="【Python茴香豆系列】之 PANDAS 如何遍历 DataFrame 的所有行">
                  【Python茴香豆系列】之 PANDAS 如何遍历 DataFrame 的所有行 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">


<div class="copyright">
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Dormouse Young</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/muse/" rel="noopener" target="_blank">NexT.Muse</a>
  </div>

    </div>
  </footer>

  
  <script src="https://cdn.jsdelivr.net/npm/animejs@3.2.1/lib/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/schemes/muse.js"></script><script src="/js/next-boot.js"></script>

  




  





</body>
</html>
